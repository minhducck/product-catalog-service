name: Release package

on:
  push:
    tags:
      - "v*"
permissions:
  contents: write

jobs:
  build-source-code:
    runs-on: ubuntu-latest
    steps:

      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Installing the node engine.
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install service deps
        run: yarn
      - name: Run test cov
        run: yarn test:cov
        env:
          APPLICATION_NAME: ${{ vars.APPLICATION_NAME }}
          APP_VERSION: ${{ vars.APP_VERSION }}
          PORT: ${{ vars.PORT }}
          ENV: ${{ vars.ENV }}
          REQUEST_TIMEOUT: ${{ vars.REQUEST_TIMEOUT }}
          TZ: ${{ vars.TZ }}
          DBHOST: ${{ secrets.DBHOST }}
          DBPORT: ${{ secrets.DBPORT }}
          DBUSER: ${{ secrets.DBUSER }}
          DBPASS: ${{ secrets.DBPASS }}
          DBNAME: ${{ secrets.DBNAME }}
      - name: 'Coverage Report'
        uses: ArtiomTr/jest-coverage-report-action@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          coverage-file: ./coverage/coverage-final.json

      - run: echo "üöß build source code on branch ${{ github.ref }}."
      - name: Run build apps
        run: yarn run build --all

      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: 'production-artifact'
          path: 'dist'

      - run: echo "üçè This job's status is ${{ job.status }}."

  release-new-version:
    name: "Deploy To Lambda"
    runs-on: 'ubuntu-latest'
    needs:
      - build-source-code
    steps:
      - name: Download a coverage artifact
        uses: actions/download-artifact@v4
      - name: Execute here
        run: echo "yarn serverless deploy --stage=test"