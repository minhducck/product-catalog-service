name: Release package

on:
  push:
    tags:
      - "v*"
permissions:
  contents: write

jobs:
  build-source-code:
    runs-on: ubuntu-latest
    steps:

      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Installing the node engine.
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install service deps
        run: yarn

      - run: echo "üöß build source code on branch ${{ github.ref }}."
      - name: Run build apps
        run: yarn run build --all

      - name: Get .env from config
        env:
          APPLICATION_NAME: ${{ vars.APPLICATION_NAME }}
          APP_VERSION: ${{ vars.APP_VERSION }}
          PORT: ${{ vars.PORT }}
          ENV: ${{ vars.ENV }}
          REQUEST_TIMEOUT: ${{ vars.REQUEST_TIMEOUT }}
          TZ: ${{ vars.TZ }}
          DBHOST: ${{ secrets.DEPLOY_DBHOST }}
          DBPORT: ${{ secrets.DEPLOY_DBPORT }}
          DBUSER: ${{ secrets.DEPLOY_DBUSER }}
          DBPASS: ${{ secrets.DEPLOY_DBPASS }}
          DBNAME: ${{ secrets.DEPLOY_DBNAME }}
        run: |
          echo APPLICATION_NAME=$APPLICATION_NAME >> .env;
          echo APP_VERSION=$APP_VERSION >> .env;
          echo PORT=$PORT >> .env;
          echo ENV=$ENV >> .env;
          echo REQUEST_TIMEOUT=$REQUEST_TIMEOUT >> .env;
          echo TZ=$TZ >> .env;
          echo DBHOST=$DBHOST >> .env;
          echo DBPORT=$DBPORT >> .env;
          echo DBUSER=$DBUSER >> .env;
          echo DBPASS=$DBPASS >> .env;
          echo DBNAME=$DBNAME >> .env;
      - name: Install AWS Credential
        uses: aws-actions/configure-aws-credentials@v4.1.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Deploy to Lambda
        run: yarn serverless deploy --stage=test
        env:
          SERVERLESS_LICENSE_KEY: ${{ secrets.SERVERLESS_LICENSE_KEY }}
      - run: echo "üçè This job's status is ${{ job.status }}."